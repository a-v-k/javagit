/**
 *  This file is part of LogiSima (http://www.logisima.com).
 *
 *  JavGit is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  JavGit is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with LogiSima-Common.  If not, see <http://www.gnu.org/licenses/>.
 *  
 *  @author Beno√Æt Simard
 *  @See https://github.com/sim51/javagit
 */
package com.logisima.javagit.cli.add;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import com.logisima.javagit.cli.Response;
import com.logisima.javagit.object.OutputErrorOrWarn;

/**
 * Response data object obtained from git-add command. It contains a list of file-action pair that contains the list of
 * files that are added by the git-add command.
 * 
 * The output can also be generated by "-n" option of git-add command ( dry run ). So we have two Actions for git-add
 * command - add - for adding a file to the repository dry run - for just testing the output of the command. Dry run
 * info need to be passed back so that the receiver of this object knows that the command did not actually run and was
 * just a dry run. The git-add commands that return no output will return this object with filesAdded list as
 * empty-list.
 * 
 */
public class GitAddResponse extends Response {

    /**
     * List of files added to the index by &lt;git-add&gt; command.
     */
    private List<File>              filesAdded;

    /**
     * Initially set to true as git-add many times does not generate any output at all. If output is generated then it
     * needs to be set to false. This can be used as a tester whether any output was generated or not.
     */
    protected boolean               noOutput;

    /**
     * List of return comment (error or warn) by the git add command.
     */
    private List<OutputErrorOrWarn> comments;

    /**
     * Boolean to know if the command was with dry-run option.
     */
    protected boolean               dryRun;

    /**
     * Constructor.
     */
    public GitAddResponse() {
        filesAdded = new ArrayList<File>();
        comments = new ArrayList<OutputErrorOrWarn>();
        noOutput = true;
        dryRun = false;
    }

    /**
     * @return the filesAdded
     */
    public List<File> getFilesAdded() {
        return filesAdded;
    }

    /**
     * @param filesAdded the filesAdded to set
     */
    public void setFilesAdded(List<File> filesAdded) {
        this.filesAdded = filesAdded;
    }

    /**
     * @return the noOutput
     */
    public boolean isNoOutput() {
        return noOutput;
    }

    /**
     * @param noOutput the noOutput to set
     */
    public void setNoOutput(boolean noOutput) {
        this.noOutput = noOutput;
    }

    /**
     * @return the comments
     */
    public List<OutputErrorOrWarn> getComments() {
        return comments;
    }

    /**
     * @param comments the comments to set
     */
    public void setComments(List<OutputErrorOrWarn> comments) {
        this.comments = comments;
    }

    /**
     * @return the dryRun
     */
    public boolean isDryRun() {
        return dryRun;
    }

    /**
     * @param dryRun the dryRun to set
     */
    public void setDryRun(boolean dryRun) {
        this.dryRun = dryRun;
    }

}
